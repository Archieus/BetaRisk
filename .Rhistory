TSYMat <- rep.row(TsyYlds,11)
View(TSYMat)
TSYMat <- as.data.frame(rep.row(TsyYlds,11))
TSYMat <- as.data.frame(rep.row(TsyYlds,11))
row.names(TSYMat) <- TDYlds[,1]
Spreads <- Yields - TSYMat
TSYMat <- as.data.frame(rep.row(TsyYlds,11))
row.names(TSYMat) <- TDYlds[,1]
View(TSYMat)
View(Yields)
str(TSYMat)
str(Yields)
TsyMat[,1]
TSYMat[,1]
TSYMat
as.matrix(TSYMat)
str(as.matrix(TSYMat))
dim(TSYMat)
dim(Yields)
TSYMat*Yields
test <- as.matrix(TSYMat, 7,11)
?matrix
test <- as.matrix(TSYMat, 7,11, byrow = TRUE)
test
View(test)
test - Yields
test <- as.data.frame(TSYMat, 7,11, byrow = TRUE)
str(test)
isop.asmatrix(TSYMat)
test <- is.matrix(TSYMat, 7,11, byrow = TRUE)
test - as.list(Yields)
Yields[row(TsyYlds),]-TsyYlds
Yields[1]
Yields[1][[1]]
Yields[2][[1]]
Yields[2][[2]]
Yields[3][[1]]
TSYMat[1]
TSYMat[1][[1]]
test <- unlist(TSYMat)
test
View(Test)
View(test)
test <- as.matrix(unlist(TSYMat))
test
View(test)
test <- as.matrix(unlist(TSYMat), nrow = 7, ncol = 11)
Test
test
str(test)
test <- as.matrix(unlist(TSYMat), nrow = 11, ncol = 7)
View(test)
TDYlds<-   read.table("yields.txt", header = TRUE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x))))
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
rep.row<-function(x,n){matrix(rep(x,each=n),nrow=n)}
TSYMat <- as.data.frame(rep.row(TsyYlds,11))
row.names(TSYMat) <- TDYlds[,1]
View(Yields)
#### Convert Non-Numeric to NA ####
Yields <- as.data.frame(lapply(Yields, function(x) (as.numeric(x))))
row.names(Yields) <- TDYlds[,1]
View(Yields)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
yields
str(Yields)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
#### Convert Non-Numeric to NA ####
Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x))))
Yield[is.na(Yields)] <- 0
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x))))
Yields[is.na(Yields)] <- 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
rep.row<-function(x,n){matrix(rep(x,each=n),nrow=n)}
TSYMat <- as.data.frame(rep.row(TsyYlds,11))
row.names(TSYMat) <- TDYlds[,1]
Yields - TSYMat
Yields - TsyYields
Yields - TsyYlds
View(TSYMat)
View(TsyYlds)
View(TDYlds)
View(TSYMat)
View(TsyYlds)
view(TsyYlds)
View(TsyYlds)
TsyYlds-Yields
ncol(Yields)
ncol(TsyYlds)
Yields[[1]]
Yields[1]
Yields[1:7]
Yields[1:7][1]
Yields[1:7]-TsyYlds
TsyYlds[1]
TsyYlds[1:7]
TsyYlds
Yields[1:7]-TsyYlds[1:7]
Yields[,1:7]-TsyYlds[,1:7]
Yields[,1:7]-TsyYlds[1:7]
Yields - Yields
str(Yields)
str(TsyYlds)
rep(Yields[11,],11)
Yields[11,]
?replications
?copy
TsyYlds <- c(Yields[11,],Yields[11,])
TsyYlds <- cbind(Yields[11,],Yields[11,])
TsyYlds <- rbind(Yields[11,],Yields[11,])
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7)
str(TsyYlds)
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE)
re
TsyYlds - TsyYlds
TsyYlds <- as.data.frame(matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE))
TsyYlds - TsyYlds
TsyYlds * TsyYlds
TsyYlds <- as.data.frame(matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE))
row.names(TsyYlds) <- TDYlds[,1]
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE)
row.names(TsyYlds) <- TDYlds[,1]
row.names(TsyYlds) <- TDYlds[11,1]
TsyYlds <- matrix(Yields[11,], nrow =11, ncol = 7, byrow = TRUE)
TsyYlds[1]
TsyYlds[2]
TsyYlds[[2]]
TsyYlds[[7]]
TsyYlds[11]
TsyYlds[1]-Yields[1]
View(TsyYlds)
View(Yields)
Yields[1]-TsyYlds[1]
.566-.349
.153-.349
Yields[[1:7]]
Yields[[1]]
Yields[[1]]-TsyYlds
TsyYlds[1]
TsyYlds[[1]]
TsyYlds[[,1]]
TsyYlds[,1]
TsyYlds[1,]
TsyYlds <- Yields[11,]
TsyYlds
TsyYlds[1]
TsyYlds[2]
TsyYlds[:2]
TsyYlds[1:2]
ncol(TsyYlds)
ncol(Yields)
?vapply
test <- lapply(Yields, function() {x - TsyYlds})
Yields
Yields[1]
Yields[[]]
Yields[[1]]
test <- lapply(Yields[[]], function() {x - TsyYlds})
test <- lapply(Yields, function() {x[[]] - TsyYlds})
str(TsyYlds)
str(Yields)
ncol(Yields)
Yields * TsyYlds
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- Yields[i] - TsyYlds[i]
}
for(i in 1:7) {
Spread[,i] <- Yields[i] -- TsyYlds[i]
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- diff(Yields[i],TsyYlds[i])
}
for(i in 1:7) {
Spread[,i] <- diff(Yields[i] %-% TsyYlds[i])
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- Yields[i] %-% TsyYlds[i]
}
Yields[1]
Yields[[1]]
for(i in 1:7) {
Spread[,i] <- Yields[[i]] - TsyYlds[i]
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spread[,i] <- Yields[[i]] - TsyYlds[i]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[i]] - TsyYlds[i]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[,i]] - TsyYlds[[,i]]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[i]] - TsyYlds[[i]]
}
for(i in 1:7) {
Spreads[,i] <- Yields[[i]] - TsyYlds[i]
}
Yields[,1]
Yields[,2]
TsyYlds
TsyYlds[1]
TsyYlds[2]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- Yields[,i] - TsyYlds[i]
}
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- Yields[,i] - TsyYlds[,i]
}
View(Spreads)
row.names(Spreads) <- TDYlds[,1]
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
View(TDYlds)
names(TDYlds)
names(Spread)
names(Spreads)
row.names(Spreads) <- TDYlds[,1]
names(Spreads) <- names(TDYlds[2:8])
print(Spreads)
names(TDYlds)
names(TDYlds[2])
names(TDYlds[8])
View(TDYlds)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- col.names(TDYlds[2:8])
print(Spreads)
colnames(Spreads) <- colnames(TDYlds[2:8])
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
View(TDYlds)
TDYlds
TDYlds<-   read.table("yields.txt", header = TRUE, sep = '\tX') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x)))))
Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- Yields[,i] - TsyYlds[,i]
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Spreads)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
naming <- gsub(TDYlds, "X","")
View(TDYlds)
?read.table
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = header, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = "", sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = TRUE, col.names = NULL, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
TDYlds<-   read.table("yields.txt", header = FALSE, sep = '\t') #sep = "tab delimited"
View(TDYlds)
TDYlds<-   read.table("yields.txt", header = TRUE, sep = '\t') #sep = "tab delimited"
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
Yields[1:10]
Yields(1:10)
Yields[,1:10]
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
View(Yields)
View(TDYlds)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
#Yields <- TDYlds[,2:8]
#row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(TDYlds)
print(Spreads)
source('C:/Users/rodney/Dropbox/RCode/Test Files/Fixed Income/YieldGrid.R', echo=TRUE)
Yields <- TDYlds[,2:8]
#row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
View(TDYlds)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
#Yields <- TDYlds[,2:8]
#row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (Yields[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (TDYlds[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
View(TDYlds)
View(Yields)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
View(TDYlds)
Yields <- TDYlds[,2:8]
View(Yields)
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(TDYlds, function(x) as.numeric(as.character(x)))))
View(Yields)
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields, function(x) as.numeric(as.character(x)))))
View(Yields)
Yields
View(Yields)
View(TDYlds)
View(Yields)
suppressWarnings(Yields <- as.data.frame(lapply(Yields[,], function(x) as.numeric(as.character(x)))))
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
View(Yields)
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
#Yields[is.na(Yields)] <- 0 ## Turn NAs to 0
row.names(Yields) <- TDYlds[,1]
TsyYlds <- Yields[11,]
Spreads <- matrix(0, nrow = 11, ncol = 7)
for(i in 1:7) {
Spreads[,i] <- (TDYlds[,i] - TsyYlds[,i])
}
row.names(Spreads) <- TDYlds[,1]
colnames(Spreads) <- colnames(TDYlds[2:8])
print(Yields)
print(Spreads)
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
TDYlds<-   read.table("yields.txt", header = TRUE, check.names = FALSE, sep = '\t') #sep = "tab delimited"
Yields <- TDYlds[,2:8]
row.names(Yields) <- TDYlds[,1]
#### Convert Non-Numeric to NA ####
suppressWarnings(Yields <- as.data.frame(lapply(Yields[], function(x) as.numeric(as.character(x)))))
RandomNumbers <- runif(100, 1, 100)
RandomNumber2 <- runif(100, 1, 100)
plot(RandomNumbers)
par(new = TRUE)
plot(RandomNumber2)
plot(RandomNumber2, type = 'l')
par(new = TRUE)
plot(RandomNumbers)
install.packages(c("lubridate", "openssl", "rlang", "Rsymphony", "tidyselect"))
install.packages("C:/Users/rodney/Downloads/Rsymphony_0.1-27.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/rodney/Downloads/Rsymphony_0.1-28.tar.gz", repos = NULL, type = "source")
library(RCurl)
# library(data.table)
ETH <- getURL('https://etherchain.org/api/statistics/price')
install.packages("rvest")
library(rvest)
url <- 'http://www.barrons.com/public/page/9_0210-wyldgp.html'
#Reading the HTML code from the website
webpage <- read_html(url)
str(webpage)
webpage$node
webpage$doc
setwd("~/")
read.table("~/BarronsConfidence.txt", sep = "")
read.table("~/BarronsConfidence.txt, sep = """)
read.table("~/BarronsConfidence.txt, sep = " "")
read.table("~/BarronsConfidence.txt")
read.table("~/BarronsConfidence.txt", sep = ",")
read.table("~/BarronsConfidence.txt", sep = "\")
read.table("~/BarronsConfidence.txt", sep = "\t")
read.table("~/BarronsConfidence.txt", sep = "\\t")
read.table("~/BarronsConfidence.txt", sep = "\\")
read.table("~/BarronsConfidence.txt", sep = ",")
read.table("~/BarronsConfidence.txt", sep = " ")
read.table("~/BarronsConfidence.txt", sep = "\t")
read.table("~/BarronsConfidence.txt", sep = "\\t")
read.table("~/BarronsConfidence.txt", sep = "/\t")
test <- read.table("~/BarronsConfidence.txt", sep = "\\t")
test <- read.table("~/BarronsConfidence.txt", sep = "\t")
test <- read.table("~/BarronsConfidence.txt", sep = "/t")
test <- read.table("~/BarronsConfidence.txt", sep = "\t")
test <- read.table("~/BarronsConfidence.txt")
test <- read.table("~/BarronsConfidence.txt", sep ="\t")
setwd("~/")
test <- read.table("~/BarronsConfidence.txt", sep ="\t")
scan("~/BarronsConfidence.txt")
test <- read.table("~/BarronsConfidence.txt", sep =",")
View(test)
colno <- max(count.fields("~/BarronsConfidence.txt", sep = ','))
test <- as.data.frame(read.table("~/BarronsConfidence.txt", sep =","))
test <- as.data.frame(read.table("~/BarronsConfidence.txt", sep ="\"))
)
)
test <-read.table("~/BarronsConfidence.txt", sep ="\")
test <-read.table("~/BarronsConfidence.txt", sep ="\\")
View(test)
test <-read.table("~/BarronsConfidence.txt", sep = c("\\", "\\t"))
test <-read.table("~/BarronsConfidence.txt", sep = "\\t")
test <-read.table("~/BarronsConfidence.txt", sep = c("\\t"))
test <-read.table("~/BarronsConfidence.txt", sep = c("\\", "t"))
setwd("~/")
read.table("BarronsConfidence.txt", sep = "\t", dec = ".", header = TRUE, encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
read.table("BarronsConfidence.txt", sep = "/t", dec = ".", header = TRUE, encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
read.table("BarronsConfidence.txt", sep = "\\t", dec = ".", header = TRUE, encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
setwd("C:/RPrograms/BetaRisk")
source('C:/RPrograms/BetaRisk/BetaRisk-TC2K.R', echo=TRUE)
View(IdioRisk)
RiskBeta <- rbind(round(EQ.beta,2), round(Fama.beta,2), round(SysRisk,4), round(IdioRisk,4))
RiskData <- t(as.data.frame(RiskBeta))
#EWH.reg <- rollSFM(EWH[,4], .index(EWH), 90)
#EWH.rma <- EWH.reg$alpha + EWH.reg$beta*.index(EWH)
#chart_Series(EWH, TA = "add_TA(EWH.rma, on = 1)")
Results <- rbind(round(last(Ann.sl), 4), round(last(r.sqrd),4), round(last(Adj.sl),4), round(EQ.beta,2),
round(last(stkreg),2), EMA.df, round(PosWt,2))
row.names(Results) <- c('Ann Slope', 'R-Sqrd', "Adj Slope", "Beta", "Price", "100 EMA", "PortWt")
Rpt <- t(as.data.frame(Results))
# Results2 <- rbind(round(last(Ann.sl), 4), round(last(r.sqrd),4), round(last(Adj.sl),4), round(last(stkreg),2),
#                   EMA.df, round(stkWt,2))
#
# row.names(Results2) <- c('Ann Slope', 'R-Sqrd', "Adj Slope", "Price", "100 EMA", "PortWt")
# Rpt2 <- t(as.data.frame(Results2))
#
# Results3 <- rbind(round(last(Ann.sl), 4), round(last(r.sqrd),4), round(last(Adj.sl),4), round(last(stkreg),2),
#                   EMA.df, round(PosDlrs,2))
#
# row.names(Results3) <- c('Ann Slope', 'R-Sqrd', "Adj Slope", "Price", "100 EMA", "PortDlrs")
# Rpt3 <- t(as.data.frame(Results3))
write.csv(Rpt,file = "PortWts-EMA.csv", row.names = TRUE)
write.csv(RiskData, file = "RiskBeta.csv", row.names = TRUE)
# write.csv(Rpt2,file = "PortWts-ex-EMA.csv", row.names = TRUE)
# write.csv(Rpt3, file = "PortDlrs.csv", row.names = TRUE)
